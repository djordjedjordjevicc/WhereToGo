// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace WebTemplate.Migrations
{
    [DbContext(typeof(ProjekatContext))]
    [Migration("20230602193910_m")]
    partial class m
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Grad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Gradovi");
                });

            modelBuilder.Entity("Models.Ocena", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("PosetilacID")
                        .HasColumnType("int");

                    b.Property<int?>("UgostiteljskiObjekatID_Korisnik")
                        .HasColumnType("int");

                    b.Property<double>("Vrednost")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("PosetilacID");

                    b.HasIndex("UgostiteljskiObjekatID_Korisnik");

                    b.ToTable("Ocena");
                });

            modelBuilder.Entity("Models.Posetilac", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KonfBroj")
                        .HasColumnType("int");

                    b.Property<bool>("NalogVerifikovan")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Uloga")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Posetioci");
                });

            modelBuilder.Entity("Models.Slike", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Pictures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UgostiteljskiObjekatID_Korisnik")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UgostiteljskiObjekatID_Korisnik");

                    b.ToTable("Slike");
                });

            modelBuilder.Entity("Models.Sto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Kapacitet")
                        .HasColumnType("int");

                    b.Property<DateTime>("PoslednjaRezervacija")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Tip")
                        .HasColumnType("int");

                    b.Property<int?>("UgostiteljskiObjekatID_Korisnik")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UgostiteljskiObjekatID_Korisnik");

                    b.ToTable("Stolovi");
                });

            modelBuilder.Entity("Models.UgostiteljskiObjekat", b =>
                {
                    b.Property<int>("ID_Korisnik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Korisnik"));

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DozvoljenoPusenje")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GradID")
                        .HasColumnType("int");

                    b.Property<int>("Konf_broj")
                        .HasColumnType("int");

                    b.Property<float>("MapX")
                        .HasColumnType("real");

                    b.Property<float>("MapY")
                        .HasColumnType("real");

                    b.Property<bool>("Nalog_verifikovan")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("PetFriendly")
                        .HasColumnType("bit");

                    b.Property<double>("ProsecnaOcena")
                        .HasColumnType("float");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Uloga")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vrsta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Korisnik");

                    b.HasIndex("GradID");

                    b.ToTable("UgostiteljskiObjekti");
                });

            modelBuilder.Entity("Models.Ocena", b =>
                {
                    b.HasOne("Models.Posetilac", "Posetilac")
                        .WithMany("Ocene")
                        .HasForeignKey("PosetilacID");

                    b.HasOne("Models.UgostiteljskiObjekat", "UgostiteljskiObjekat")
                        .WithMany("Ocene")
                        .HasForeignKey("UgostiteljskiObjekatID_Korisnik");

                    b.Navigation("Posetilac");

                    b.Navigation("UgostiteljskiObjekat");
                });

            modelBuilder.Entity("Models.Slike", b =>
                {
                    b.HasOne("Models.UgostiteljskiObjekat", "UgostiteljskiObjekat")
                        .WithMany()
                        .HasForeignKey("UgostiteljskiObjekatID_Korisnik");

                    b.Navigation("UgostiteljskiObjekat");
                });

            modelBuilder.Entity("Models.Sto", b =>
                {
                    b.HasOne("Models.UgostiteljskiObjekat", "UgostiteljskiObjekat")
                        .WithMany("Stolovi")
                        .HasForeignKey("UgostiteljskiObjekatID_Korisnik");

                    b.Navigation("UgostiteljskiObjekat");
                });

            modelBuilder.Entity("Models.UgostiteljskiObjekat", b =>
                {
                    b.HasOne("Models.Grad", "Grad")
                        .WithMany("UgostiteljskiObjekti")
                        .HasForeignKey("GradID");

                    b.Navigation("Grad");
                });

            modelBuilder.Entity("Models.Grad", b =>
                {
                    b.Navigation("UgostiteljskiObjekti");
                });

            modelBuilder.Entity("Models.Posetilac", b =>
                {
                    b.Navigation("Ocene");
                });

            modelBuilder.Entity("Models.UgostiteljskiObjekat", b =>
                {
                    b.Navigation("Ocene");

                    b.Navigation("Stolovi");
                });
#pragma warning restore 612, 618
        }
    }
}
